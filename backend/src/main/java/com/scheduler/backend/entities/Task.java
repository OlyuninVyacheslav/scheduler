package com.scheduler.backend.entities;
import lombok.*;

import jakarta.persistence.*;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import java.time.LocalDate;
import java.time.LocalDateTime;

@Data
@AllArgsConstructor
@NoArgsConstructor
@Builder
@Entity
@Table(name = "task")
public class Task {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @NotNull
    @Size(max = 255)
    @Column(name = "name", nullable = false, length = 255)
    private String name;

    @NotNull
    @ManyToOne(fetch = FetchType.LAZY) // assuming FetchType.LAZY for better performance
    @JoinColumn(name = "type_id", nullable = false)
    private TypeOfTask type;

    @Column(name = "descryption", columnDefinition = "text")
    private String description;

    @Column(name = "deadline")
    private LocalDate deadline;

    @Column(name = "created_at")
    private LocalDateTime createdAt;

    // Constructors, getters, setters can be generated by Lombok @Data annotation

    // If createdAt needs to be set on creation, you can use a method like this:
//    @PrePersist
//    protected void onCreate() {
//        createdAt = LocalDateTime.now();
//    }
}